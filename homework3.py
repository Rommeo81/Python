'''
Задача 16.
Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N].
Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X

*Пример:*
5
1 2 3 4 5
3
-> 1
'''

print(f'\n=== Задача 16 ===\n') 

n = int(input("Введите длинну массива: "))  # вводим количество элементов в массиве
a = list(map(int, input("Введите числа массива через пробел: ").split()))  # вводим элементы массива и преобразуем их в список
x = int(input("Введите число, которое ищем в массиве: "))  # считываем число X

count = 0  # счетчик количества вхождений числа X в массив

# перебираем все элементы массива
for i in range(n):
    if a[i] == x:  # если элемент равен X, увеличиваем счетчик на 1
        count += 1

print(f'Число {x} встрчечается {count} раз в массиве.\n')  # выводим количество вхождений числа X в массив



'''
Задача 18.
Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
В последующих  строках записаны N целых чисел Ai. Последняя строка содержит число X

*Пример:*
5
1 2 3 4 5
6
-> 5
'''

print(f'\n=== Задача 18 ===\n') 

n = int(input("Введите количество элементов в массиве: "))  # задаем количество элементов в массиве
a = list(map(int, input("Введите числа массива через пробел: ").split()))  # считываем элементы массива и преобразуем их в список
x = int(input("Введите число, для поиска к нему ближайшего элемента: "))  # считываем число X

# находим первый элемент массива и считаем его разность с числом X
min_diff = abs(a[0] - x)
closest_element = a[0]

# проходим по всем элементам массива, начиная со второго
for i in range(1, n):
    # считаем разность текущего элемента с числом X
    diff = abs(a[i] - x)
    
    # если разность меньше, чем у предыдущего ближайшего элемента, обновляем значения ближайшего элемента и разности
    if diff < min_diff:
        min_diff = diff
        closest_element = a[i]

print(f'Ближайший элемент к числу {x} будет число {closest_element}.\n')  # выводим ближайший элемент к числу X



"""
Задача 20*
В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
В случае с английским алфавитом очки распределяются так:
A, E, I, O, U, L, N, S, T, R – 1 очко;
D, G – 2 очка; B, C, M, P – 3 очка;
F, H, V, W, Y – 4 очка;
K – 5 очков;
J, X – 8 очков;
Q, Z – 10 очков.

А русские буквы оцениваются так:
А, В, Е, И, Н, О, Р, С, Т – 1 очко;
Д, К, Л, М, П, У – 2 очка;
Б, Г, Ё, Ь, Я – 3 очка;
Й, Ы – 4 очка;
Ж, З, Х, Ц, Ч – 5 очков;
Ш, Э, Ю – 8 очков;
Ф, Щ, Ъ – 10 очков.

Напишите программу, которая вычисляет стоимость введенного пользователем слова.
Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы.

Пример:
ноутбук -> 12
"""

print(f'\n=== Задача 20* ===\n') 

# создаем два словаря eng_points и rus_points,
# которые содержат соответствие букв их ценности в очках
# для английского и русского алфавитов соответственно

eng_points = {
'A': 1, 'B': 3, 'C': 3, 'D': 2, 'E': 1,
'F': 4, 'G': 2, 'H': 4, 'I': 1, 'J': 8,
'K': 5, 'L': 1, 'M': 3, 'N': 1, 'O': 1,
'P': 3, 'Q': 10, 'R': 1, 'S': 1, 'T': 1,
'U': 1, 'V': 4, 'W': 4, 'X': 8, 'Y': 4, 'Z': 10
}

rus_points = {
'А': 1, 'Б': 3, 'В': 1, 'Г': 3, 'Д': 2,
'Е': 1, 'Ё': 3, 'Ж': 5, 'З': 5, 'И': 1,
'Й': 4, 'К': 2, 'Л': 2, 'М': 2, 'Н': 1,
'О': 1, 'П': 2, 'Р': 1, 'С': 1, 'Т': 1,
'У': 2, 'Ф': 10, 'Х': 5, 'Ц': 5, 'Ч': 5,
'Ш': 8, 'Щ': 10, 'Ъ': 10, 'Ы': 4, 'Ь': 3,
'Э': 8, 'Ю': 8, 'Я': 3
}


word = input("Введите ваше слово на русском или английскоя языке: ").upper()  # считываем слово и переводим все буквы в верхний регистр

if word.isalpha():
    if word[0] in eng_points:
        points_dict = eng_points
    else:
        points_dict = rus_points

    score = sum(points_dict[letter] for letter in word)  # считаем сумму очков для каждой буквы в слове
    print(f"За слово \"{word}\" вы набрали {score} баллов!\n")  # выводим результат
else:
    print("Ошибка: в слове должны быть только буквы!")
    