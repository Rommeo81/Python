'''
Задача 34.
Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм.
Поскольку разобраться в его кричалках не настолько просто, насколько легко он их придумывает,
Вам стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число гласных букв)
в каждой фразе стихотворения одинаковое. Фраза может состоять из одного слова,
если во фразе несколько слов, то они разделяются дефисами.
Фразы отделяются друг от друга пробелами. Стихотворение  Винни-Пух вбивает в программу с клавиатуры.
В ответе напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом все не в порядке

Пример:
Ввод: пара-ра-рам рам-пам-папам па-ра-па-да    
Вывод: Парам пам-пам  
'''

print(f'\n=== Задача 34 ===\n')

# Запрашиваем стихотворение у пользователя
poem = input('Введите стихотворение Винни-Пуха: ')

# Разделяем стихотворение на фразы и получаем список фраз
phrases = poem.split()

# Создаем пустой список для количества гласных букв в каждой фразе
vowel_counts = []

# Используем цикл для перебора фраз
for phrase in phrases:
    # Используем метод count() для подсчета гласных букв в фразе
    # Гласными считаем буквы "aeiouyAEIOUYаяуюоеёэиыАЯУЮОЕЁЭИЫ"
    vowel_count = sum(phrase.count(vowel) for vowel in "aeiouyAEIOUYаяуюоеёэиыАЯУЮОЕЁЭИЫ")
    # Добавляем количество гласных букв в список
    vowel_counts.append(vowel_count)

# Если все элементы списка равны между собой, то считаем, что в стихотворении есть ритм
if len(set(vowel_counts)) == 1:
    print('Парам пам-пам')
else:
    print('Пам парам')

print("========= Конец зачачи №34 ========== \n")



'''
Задача 36.
Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и столбца.
Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, которые должны быть распечатаны.
Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля).
Примечание: бинарной операцией называется любая операция, у которой ровно два аргумента, как, например, у операции умножения.

Ввод: print_operation_table(lambda x, y: x * y)
Вывод:
1 2 3 4 5 6
2 4 6 8 10 12
3 6 9 12 15 18
4 8 12 16 20 24
5 10 15 20 25 30
6 12 18 24 30 36
'''

print(f'\n=== Задача 36 ===\n')

def print_operation_table(operation, num_rows=6, num_columns=6):
    # печатаем первую строку с номерами столбцов
    print("    ", end="")
    for column in range(1, num_columns + 1):
        print("{:4d}".format(column), end="")
    print()
    
    # печатаем таблицу умножения
    for row in range(1, num_rows + 1):
        print("{:4d}".format(row), end="")
        for column in range(1, num_columns + 1):
            result = operation(row, column)
            print("{:4d}".format(result), end="")
        print()

# пример использования функции
print_operation_table(lambda x, y: x * y)

# На выходе мы получим таблицу умножения, распечатанную в виде таблицы.
# В данном случае в качестве операции используется умножение,
# но эту функцию можно заменить на любую другую бинарную операцию.

print("========= Конец зачачи №36 ==========")
